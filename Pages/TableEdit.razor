@page "/TableEdit"
@using Microsoft.AspNetCore.Components.Forms
@rendermode RenderMode.InteractiveServer
@inherits TableEditBase

<h3>📄 Table Documentation</h3>

@if (!IsConnected)
{
    <div class="mb-3">
        <label>Server Name:</label>
        <input class="form-control" @bind="ServerName" />

        <label class="mt-2">Database Name:</label>
        <input class="form-control" @bind="DatabaseName" />

        <label class="mt-2">Password:</label>
        <input class="form-control" type="password" @bind="Password" />

        <button class="btn btn-primary mt-3" @onclick="ConnectToMySQL">Connect</button>

        <p class="mt-2">Status: @StatusMessage</p>
    </div>
}
else
{
    <div class="mb-3">
        <label>Select Table:</label>
        <select class="form-control" @bind="SelectedTable" @bind:after="HandleTableChange">
            <option value="">-- Select Table --</option>
            @foreach (var table in Tables)
            {
                <option value="@table">@table</option>
            }
        </select>
    </div>

    @if (!string.IsNullOrEmpty(SelectedTable))
    {
        <EditForm Model="CurrentDocumentation" OnValidSubmit="SaveDocumentation">
            <div class="mb-3">
                <label>Notes for table <b>@SelectedTable</b>:</label>
                <InputTextArea class="form-control" @bind-Value="CurrentDocumentation.Notes" rows="5" />
            </div>
            <button class="btn btn-success">💾 Save</button>
        </EditForm>

        @if (Columns.Any())
        {
            <h5 class="mt-4">📋 Columns in <b>@SelectedTable</b>:</h5>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Data Type</th>
                        <th>Key Type</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var col in Columns)
                    {
                        <tr>
                            <td>@col.Name</td>
                            <td>@col.DataType</td>
                            <td>
                                @if (col.IsPrimaryKey)
                                {
                                    <span title="Primary Key">🔑 Primary</span>
                                }
                                else if (col.IsForeignKey)
                                {
                                    <span title="Foreign Key">🔗 Foreign</span>
                                }
                                else
                                {
                                    <span>—</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
}

@if (!string.IsNullOrEmpty(StatusMessage))
{
    <div class="alert alert-info mt-2">@StatusMessage</div>
}
